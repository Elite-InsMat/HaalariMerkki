#include <Arduino.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <Wire.h>
#include <stdlib.h>
#include <time.h>

#include "globals.hpp"
#include "BluetoothSerial.h"
#include "globals.hpp"
#include "mikagunspin.hpp"

static const uint8_t mika_gun[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x01, 0xff, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x1f, 0xff, 0xc0, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x7f, 0xff, 0x60, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xff, 0xbf, 0x50, 0x00, 0x00, 
  0x00, 0x00, 0x01, 0xff, 0xff, 0xe8, 0x00, 0x00, 
  0x00, 0x00, 0x03, 0xff, 0xff, 0xb4, 0x00, 0x00, 
  0x00, 0x00, 0x03, 0xff, 0xfd, 0xda, 0x00, 0x00, 
  0x00, 0x00, 0x0f, 0xff, 0x5f, 0x6a, 0x00, 0x00, 
  0x00, 0x00, 0x17, 0xfd, 0xef, 0xad, 0x00, 0x00, 
  0x00, 0x00, 0x2f, 0xfe, 0xb7, 0x6a, 0x80, 0x00, 
  0x00, 0x00, 0x3f, 0xf5, 0xab, 0xb6, 0x80, 0x00, 
  0x00, 0x00, 0x5f, 0xaa, 0xd5, 0x55, 0x40, 0x00, 
  0x00, 0x00, 0x5f, 0xaa, 0x55, 0x6b, 0x40, 0x00, 
  0x00, 0x00, 0xfd, 0x55, 0x55, 0x55, 0xa0, 0x00, 
  0x00, 0x00, 0xb6, 0xaa, 0xaa, 0xaa, 0xa0, 0x00, 
  0x00, 0x01, 0x6a, 0xaa, 0x95, 0x55, 0x50, 0x00, 
  0x00, 0x01, 0x75, 0x55, 0x55, 0x56, 0xd0, 0x00, 
  0x00, 0x01, 0xda, 0xaa, 0xaa, 0xaa, 0xa0, 0x00, 
  0x00, 0x01, 0x6a, 0xaa, 0xaa, 0xaa, 0xa8, 0x00, 
  0x00, 0x01, 0xb5, 0x55, 0x55, 0x55, 0xb0, 0x00, 
  0x00, 0x00, 0xd5, 0x55, 0x4a, 0xaa, 0xa8, 0x00, 
  0x00, 0x03, 0x6a, 0xaa, 0xaa, 0xaa, 0xa8, 0x00, 
  0x00, 0x03, 0x6a, 0xa9, 0x2a, 0xaa, 0xb4, 0x00, 
  0x00, 0x02, 0xd5, 0x55, 0x49, 0x55, 0x54, 0x00, 
  0x00, 0x03, 0xd5, 0x55, 0x55, 0x55, 0x6a, 0x00, 
  0x00, 0x05, 0xf5, 0x2a, 0xaa, 0x55, 0x54, 0x00, 
  0x00, 0x02, 0xfd, 0x0a, 0xaa, 0x2a, 0xaa, 0x00, 
  0x00, 0x05, 0x52, 0x02, 0xa8, 0x0a, 0xb4, 0x00, 
  0x00, 0x06, 0xda, 0x05, 0x54, 0x0a, 0xaa, 0x00, 
  0x00, 0x35, 0x05, 0x15, 0x54, 0x2a, 0xb5, 0x00, 
  0x00, 0x7a, 0x92, 0xaa, 0xab, 0x55, 0x5a, 0x00, 
  0x00, 0x7a, 0x45, 0x55, 0x54, 0xab, 0x6d, 0x00, 
  0x00, 0xd4, 0x45, 0x55, 0x55, 0x55, 0x55, 0x00, 
  0x03, 0xf0, 0x9a, 0xaa, 0xaa, 0xab, 0x6a, 0x00, 
  0x07, 0xfc, 0x95, 0x55, 0x55, 0x55, 0x5b, 0x00, 
  0x0f, 0x15, 0x2a, 0xaa, 0xaa, 0xab, 0x6a, 0x00, 
  0x0f, 0xe6, 0x2d, 0x55, 0x55, 0x55, 0xaa, 0x80, 
  0x0d, 0xea, 0x2f, 0x55, 0x55, 0x55, 0x6d, 0x00, 
  0x0d, 0xea, 0x5f, 0x55, 0x54, 0xab, 0x55, 0x80, 
  0x0b, 0xf5, 0x5f, 0x4d, 0x55, 0x55, 0xda, 0x80, 
  0x0d, 0xf6, 0x7e, 0x86, 0xb5, 0x56, 0xaa, 0x80, 
  0x04, 0xaa, 0xbe, 0x05, 0x55, 0x55, 0xb5, 0x00, 
  0x07, 0xb4, 0x9f, 0x0b, 0x6d, 0x56, 0xad, 0x80, 
  0x02, 0xd5, 0x2e, 0x15, 0x55, 0x5b, 0x75, 0x00, 
  0x02, 0xa9, 0x05, 0x15, 0x55, 0xad, 0x5d, 0x00, 
  0x05, 0xd6, 0x8c, 0x2b, 0x55, 0x5a, 0xd5, 0x00, 
  0x06, 0xd5, 0x66, 0x15, 0x55, 0x6d, 0x74, 0x00, 
  0x03, 0xed, 0x55, 0x2b, 0x57, 0xba, 0xac, 0x00, 
  0x06, 0x55, 0x02, 0xb5, 0x55, 0xed, 0xb4, 0x00, 
  0x05, 0xac, 0x01, 0xeb, 0x5f, 0xdd, 0x50, 0x00, 
  0x03, 0x5e, 0x00, 0xfb, 0xdf, 0xee, 0xd8, 0x00, 
  0x03, 0xf9, 0x42, 0xff, 0xfe, 0xbb, 0x60, 0x00, 
  0x03, 0xfa, 0xa8, 0xbf, 0xff, 0x5a, 0xb0, 0x00, 
  0x03, 0xfd, 0x42, 0xbf, 0xf5, 0x6b, 0x40, 0x00, 
  0x03, 0xfa, 0x01, 0x4b, 0xd5, 0x6d, 0xc0, 0x00, 
  0x03, 0xfa, 0x02, 0xb4, 0x5a, 0xd6, 0x00, 0x00, 
  0x01, 0xfa, 0xa1, 0x57, 0x55, 0x76, 0x00, 0x00, 
  0x00, 0xfd, 0x4b, 0x54, 0xaa, 0xe0, 0x00, 0x00, 
  0x00, 0x6a, 0xa1, 0x55, 0x55, 0x40, 0x00, 0x00, 
  0x00, 0x74, 0x48, 0x2a, 0xaa, 0x00, 0x00, 0x00, 
  0x00, 0x35, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x35, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x0d, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
};

//Init local variables
static int c_counter = 0; //Complete rotations
static int r_counter = 0; //Rotation counter

void mikagun_loop() {
  display.clearDisplay();
  display.setRotation(r_counter);
  switch(r_counter){
    case 0:
      display.drawBitmap(64-32,32-32, mika_gun, 64, 64, 1);
    break;
    case 1:
    display.drawBitmap(0,32, mika_gun, 64, 64, 1);
    break;
    case 2:
    display.drawBitmap(32,0, mika_gun, 64, 64, 1);
    break;
    case 3:
    display.drawBitmap(0,32, mika_gun, 64, 64, 1);
    break;
  }
  r_counter++;
  if(r_counter > 3){r_counter = 0; r_counter++;}
  if(r_counter <0){r_counter = 3;r_counter++;}
  display.setCursor(0, 0);
  display.printf("%d", c_counter);
  display.display();
  delay(100);
}